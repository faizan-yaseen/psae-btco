(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{275:function(t,a,s){t.exports=s.p+"assets/img/record-rules-venn-diagram.ba042dc8.png"},311:function(t,a,s){"use strict";s.r(a);var e=s(13),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"sally-s-flower-shop-part-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sally-s-flower-shop-part-6"}},[t._v("#")]),t._v(" Sally's Flower Shop - Part 6")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/odoo-ps/psae-btco/commit/7aa392f04e7927708b26026e898894a6afb19a62",target:"_blank",rel:"noopener noreferrer"}},[t._v("View the commit for this solution"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("This exercise emphasizes\non "),a("a",{attrs:{href:"https://www.odoo.com/documentation/16.0/developer/reference/backend/security.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("security"),a("OutboundLink")],1),t._v(" in\nterms of groups and record rules, and a special model in Odoo called "),a("code",[t._v("ir.sequence")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"groups"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#groups"}},[t._v("#")]),t._v(" Groups")]),t._v(" "),a("p",[t._v("We will create a\ngardeners' "),a("a",{attrs:{href:"https://www.odoo.com/documentation/16.0/developer/reference/backend/security.html#res.groups",target:"_blank",rel:"noopener noreferrer"}},[t._v("group"),a("OutboundLink")],1),t._v(" in a\ndedicated file named "),a("code",[t._v("groups.xml")]),t._v(" inside the "),a("code",[t._v("data")]),t._v(" folder. It is possible to create subgroups by\nspecifying the "),a("code",[t._v("implied_ids")]),t._v(" field. We can think of this field as "),a("em",[t._v("parent groups")]),t._v(" so that our group will inherit all\nof their access rights. However, we will not need to create a subgroup for now. Moreover, the new group record is\nwrapped by a "),a("code",[t._v("data")]),t._v(" tag that has the attribute "),a("code",[t._v('noupdate="1"')]),t._v(". Such records will never be updated when we upgrade the\nmodule; they will only be created when installing the module. This is a good practice when we do not want to\nreset certain records during a module upgrade and rather keep the changes done on them by the user. Examples may include\ngroups, record rules, any demo data, and more.")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token prolog"}},[t._v('<?xml version="1.0" encoding="UTF-8" ?>')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("odoo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("data")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("noupdate")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("record")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("model")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("res.groups"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            ...\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("record")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("odoo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("GitHubButton",{attrs:{link:"https://github.com/odoo-ps/psae-btco/blob/sally-flower-shop/flower_shop/data/groups.xml#L3"}}),t._v(" "),a("h3",{attrs:{id:"scheduled-action"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scheduled-action"}},[t._v("#")]),t._v(" Scheduled Action")]),t._v(" "),a("p",[t._v("The relationship between products and serials is that a "),a("code",[t._v("product.product")]),t._v(" record has many "),a("code",[t._v("stock.production.lot")]),t._v(" (this\nis the model for serial) records. We need to check all the serials for each flower product and if at\nleast one serial requires watering, then the product will be marked with a ribbon. Now, one may think of implementing\nthis by a computed boolean field in the "),a("code",[t._v("product.product")]),t._v(" model and the compute method can have a dependency on the\nserial records. Regardless of whether you considered this approach, it cannot be done unfortunately because of the\nfollowing:")]),t._v(" "),a("ul",[a("li",[t._v("there is no reference to "),a("code",[t._v("stock.production.lot")]),t._v(" (serial) records from the product, rather there is product reference\nin the serial model")]),t._v(" "),a("li",[t._v("even if there was a serial reference, the aforementioned compute method needs to be triggered based on the serial\nrecords as well as the\n"),a("strong",[t._v("current date")]),t._v(" since we need to check if any serial needs watering every single day")])]),t._v(" "),a("p",[t._v("As a rule of thumb, whenever something needs to be checked over fixed time intervals, it calls for\na "),a("a",{attrs:{href:"https://www.odoo.com/documentation/16.0/developer/reference/backend/actions.html#automated-actions-ir-cron",target:"_blank",rel:"noopener noreferrer"}},[t._v("scheduled or automated action"),a("OutboundLink")],1),t._v(".\nWe will create a scheduled action that will run some Python code every day. To write our code, we select the "),a("code",[t._v("state")]),t._v("\nfield to be "),a("code",[t._v("code")]),t._v(" and in the "),a("code",[t._v("code")]),t._v(" field, we make a call to a model's function.")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token prolog"}},[t._v('<?xml version="1.0" encoding="UTF-8" ?>')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("odoo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("record")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("model")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("ir.cron"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        ...\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("field")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("code"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("field")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("field")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("code"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("model.action_needs_watering()"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("field")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("record")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("odoo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("GitHubButton",{attrs:{link:"https://github.com/odoo-ps/psae-btco/blob/sally-flower-shop/flower_shop/data/actions.xml#L49"}}),t._v(" "),a("p",[t._v("Notice that "),a("code",[t._v("model")]),t._v(" is a variable available within the scope of the "),a("code",[t._v("code")]),t._v(" field. The variable contains reference to the model to which this action is bound.\nBelow is the full list of variables available for use and they were copied from the form view of "),a("code",[t._v("ir.actions.server")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Available variables:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  - env: Odoo Environment on which the action is triggered")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  - model: Odoo Model of the record on which the action is triggered; is a void recordset")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  - record: record on which the action is triggered; may be void")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  - records: recordset of all records on which the action is triggered in multi-mode; may be void")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  - time, datetime, dateutil, timezone: useful Python libraries")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  - float_compare: Odoo function to compare floats based on specific precisions")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  - log: log(message, level='info'): logging function to record debug information in ir.logging table")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  - UserError: Warning Exception to use with raise")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  - Command: x2Many commands namespace")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# To return an action, assign: action = {...}")]),t._v("\n")])])]),a("p",[t._v("In the function, we fetch all the flower products in the database then retrieve all the serial records that belong to\nthe flower products. Next, for each serial we calculate the number of days it has been since the last time it was\nwatered. This is then compared to "),a("code",[t._v("watering_frequency")]),t._v(" of the flower to determine if it needs watering. We also use\na "),a("code",[t._v("defaultdict")]),t._v(" dictionary where the keys are flower product IDs and the values can be either "),a("code",[t._v("True")]),t._v(" if the product\nneeds watering, or "),a("code",[t._v("False")]),t._v(" otherwise. Once we iterate over all the serials, we update the product records.")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("action_needs_watering")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    flowers "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"product.product"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"is_flower"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"="')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    serials "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stock.production.lot"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"product_id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"in"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" flowers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ids"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    lot_vals "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" defaultdict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" serial "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" serials"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" serial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("water_ids"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            last_watered_date "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("water_ids"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("date\n            frequency "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("product_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flower_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("watering_frequency\n            today "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fields"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("today"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            needs_watering "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("today "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" last_watered_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("days "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" frequency\n            lot_vals"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("serial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("product_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" needs_watering\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            lot_vals"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("serial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("product_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" flower "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" flowers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        flower"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("needs_watering "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lot_vals"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flower"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("GitHubButton",{attrs:{link:"https://github.com/odoo-ps/psae-btco/blob/sally-flower-shop/flower_shop/models/product.py#L16"}}),t._v(" "),a("h3",{attrs:{id:"sequence"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sequence"}},[t._v("#")]),t._v(" Sequence")]),t._v(" "),a("p",[t._v("If all the flower serials followed the same sequence numbering, we would have simply created an "),a("code",[t._v("ir.sequence")]),t._v(" record in\nXML and called it a day. However, the exercise requires that each flower should have its own sequence record. Hence, we\nwill add a "),a("code",[t._v("many2one")]),t._v(" field in the "),a("code",[t._v("product.product")]),t._v(" model so that each product record can be associated to\nan "),a("code",[t._v("ir.sequence")]),t._v(" record.")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("sequence_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fields"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Many2one"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ir.sequence"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Flower Sequence"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("GitHubButton",{attrs:{link:"https://github.com/odoo-ps/psae-btco/blob/sally-flower-shop/flower_shop/models/product.py#L12"}}),t._v(" "),a("p",[t._v("Next, in the "),a("code",[t._v("create")]),t._v(" method of "),a("code",[t._v("stock.production.lot")]),t._v(", we will call "),a("code",[t._v("next_by_id()")]),t._v(" on the product's sequence record.\nThis will return the next appropriate sequence number for the serial that is being created. We then assign the sequence\ninside "),a("code",[t._v("vals")]),t._v(" to the "),a("code",[t._v("name")]),t._v(" field of the serial.")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@api"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("model_create_multi")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vals_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" vals "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" vals_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        product "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"product.product"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("browse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vals"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"product_id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" product"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sequence_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            vals"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" product"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sequence_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next_by_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("create"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vals_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("GitHubButton",{attrs:{link:"https://github.com/odoo-ps/psae-btco/blob/sally-flower-shop/flower_shop/models/stock_production_lot.py#L41"}}),t._v(" "),a("h3",{attrs:{id:"multi-record-creation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multi-record-creation"}},[t._v("#")]),t._v(" Multi-Record Creation")]),t._v(" "),a("p",[t._v("In the previous code snippet, we observe that the create method has the function decorator "),a("code",[t._v("model_create_multi")]),t._v(". This is\na common decorator used in Odoo to indicate that the method is able to create multiple records at the same time. The\nmain difference between having this decorator and the decorator "),a("code",[t._v("model")]),t._v(" is that the former accepts a "),a("em",[t._v("list of\ndictionaries")]),t._v(" whereas the latter accepts a single "),a("em",[t._v("dictionary")]),t._v(". This also explains why we had to\nuse a loop in our create method to iterate over "),a("code",[t._v("vals_list")]),t._v(". Furthermore, the original "),a("code",[t._v("stock.production.lot")]),t._v(" model\nallows multi-record creation and since we are overriding its create method for our use, we must remain consistent with\nthe decorator type.")]),t._v(" "),a("p",[t._v("If we inspect the values parameter (can be "),a("code",[t._v("vals")]),t._v(" or "),a("code",[t._v("vals_list")]),t._v(", name does not matter), that is being passed to the\ncreate method, below are how their contents would look\nlike.")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# multi-record using @api.model_create_multi")]),t._v("\nvals "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ABC123"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"product_id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"quantity"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"XYZ321"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"product_id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"quantity"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# single record using @api.model")]),t._v("\nvals "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"JKL456"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"product_id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"quantity"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"record-rules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#record-rules"}},[t._v("#")]),t._v(" Record Rules")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.odoo.com/documentation/16.0/developer/howtos/rdtraining/B_acl_irrules.html#record-rules",target:"_blank",rel:"noopener noreferrer"}},[t._v("Record rules"),a("OutboundLink")],1),t._v(" are\none of the trickiest topics in Odoo. There are two types of record rules: global rules and group-specific rules. The\nfollowing is copied from the form view of "),a("code",[t._v("ir.rule")]),t._v(" and will be important in solving the exercise:")]),t._v(" "),a("p",[a("em",[t._v("Global rules (non group-specific) are restrictions, and cannot be bypassed.\nGroup-specific rules grant additional permissions, but are constrained within the bounds of global ones.")])]),t._v(" "),a("p",[t._v("Moreover, these are how the interactions go about between global and group-specific rules:")]),t._v(" "),a("ol",[a("li",[t._v("Global rules are ANDed with each other")]),t._v(" "),a("li",[t._v("Group-specific rules are ORed with each other")]),t._v(" "),a("li",[t._v("Global rules and the result of group-specific rules are ANDed with each other")])]),t._v(" "),a("p",[t._v("Example: GLOBAL_RULE_1 AND GLOBAL_RULE_2 AND ( (GROUP_A_RULE_1 OR GROUP_A_RULE_2) OR (GROUP_B_RULE_1 OR\nGROUP_B_RULE_2) )")]),t._v(" "),a("p",[t._v("For this exercise, first we will create a global rule that basically translates to this:")]),t._v(" "),a("p",[a("em",[t._v("Give access to all products if the user belongs to the gardeners' group, otherwise give access to non-flower products\nonly.")])]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token prolog"}},[t._v('<?xml version="1.0" encoding="UTF-8" ?>')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("odoo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("data")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("noupdate")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("record")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("model")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("ir.rule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            ...\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("field")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("domain_force"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("[(1,'=',1)] if user.user_has_groups('flower_shop.group_gardener') else\n                [('is_flower','=',False)]\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("field")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("record")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("odoo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("GitHubButton",{attrs:{link:"https://github.com/odoo-ps/psae-btco/blob/sally-flower-shop/flower_shop/data/rules.xml#L4"}}),t._v(" "),a("p",[t._v("With this record rule, any gardener can access any flower product. We now want to restrict one's access further by\ncreating another record rule that says:")]),t._v(" "),a("p",[a("em",[t._v("For a gardener user, show them flowers that either have no gardeners assigned or have the current user assigned.")])]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token prolog"}},[t._v('<?xml version="1.0" encoding="UTF-8" ?>')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("odoo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("data")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("noupdate")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("record")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("model")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("ir.rule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            ...\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("field")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("groups"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("eval")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("[(4, ref("),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("flower_shop.group_gardener"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("))]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("field")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("domain_force"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("['|',('user_ids','=',False),('user_ids','in',user.id)]"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("field")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("record")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("odoo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("GitHubButton",{attrs:{link:"https://github.com/odoo-ps/psae-btco/blob/sally-flower-shop/flower_shop/data/rules.xml#L10"}}),t._v(" "),a("p",[t._v("Note that this record rule applies only on the gardeners' group. While the global rule earlier allowed access to all\nflower products, this group-specific rule narrows down the access instead. As a result, a user belonging to the\ngardener's group will see flower products that they are assigned to and the products that do not have anybody assigned.")]),t._v(" "),a("p",[t._v("The result of the record rules can be depicted by the Venn diagram.\n"),a("br")]),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:s(275),width:"550"}})]),t._v(" "),a("br"),t._v("\nThis marks the completion of part 6 of the case study."),a("p")],1)}),[],!1,null,null,null);a.default=n.exports}}]);